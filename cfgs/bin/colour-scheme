#!/usr/bin/env sh
COLOUR_FILE="$HOME/.config/colourscheme"
LOCATION=13963

printhelp () {
    echo "$0 {light|dark|boot}"
    exit 1;
}

light () {
    if [ -e "$COLOUR_FILE" ] && [ "$(cat "$COLOUR_FILE")" = "light" ]; then exit 0; fi
    echo "light" > "$COLOUR_FILE"
    cp --no-preserve=mode "$HOME/.config/termite/config-light" "$HOME/.config/termite/config"
    killall -USR1 termite
    nvim_all_command "<Esc>:colorscheme one<CR>"
    nvim_all_command "<Esc>:set background=light<CR>"
    xfconf-query -c xsettings -p /Net/ThemeName -s "Arc-Darker"
    wallpaper_light
}

dark () {
    if [ -e "$COLOUR_FILE" ] && [ "$(cat "$COLOUR_FILE")" = "dark" ]; then exit 0; fi
    echo "dark" > "$COLOUR_FILE"
    cp --no-preserve=mode "$HOME/.config/termite/config-dark" "$HOME/.config/termite/config"
    killall -USR1 termite
    nvim_all_command "<Esc>:colorscheme nord<CR>"
    nvim_all_command "<Esc>:set background=dark<CR>"
    xfconf-query -c xsettings -p /Net/ThemeName -s "Arc-Dark"
    wallpaper_dark
}

determine_colourscheme() {
    rm -f "$COLOUR_FILE"
    while true ; do
        JSON_DATA=$(curl "https://query.yahooapis.com/v1/public/yql" \
            -d q="select astronomy.sunset,astronomy.sunrise from weather.forecast where woeid=${LOCATION}" \
            -d format=json 2>/dev/null)
        SUNRISE_TIME=$(echo "$JSON_DATA" | jq -r '.query.results.channel.astronomy.sunrise')
        SUNSET_TIME=$(echo "$JSON_DATA" | jq -r '.query.results.channel.astronomy.sunset')
        if [ "$SUNRISE_TIME" != "null" ] && [ "$SUNSET_TIME" != "null" ] ; then
            break
        fi
    done
    SUNRISE=$(date -d "$SUNRISE_TIME" +%s)
    SUNSET=$(date -d "$SUNSET_TIME" +%s)
    CURRENT_TIME=$(date +%s)
    if [ "$CURRENT_TIME" -ge "$SUNRISE" ] && [ "$CURRENT_TIME" -le "$SUNSET" ] ; then
        echo "Switching to light theme."
        light
    else
        echo "Switching to dark theme."
        dark
    fi
}

nvim_all_command() {
    for nvim_inst in /tmp/nvimsocket-*; do
        nvr --servername "$nvim_inst" --remote-send "$1" 2> /dev/null
    done
}

wallpaper_dark() {
    WORKDIR="$HOME/.local/share/unsplash/dark"
    DATE=$(date +%s)
    SCREEN_0="$WORKDIR/screen0-$DATE"
    SCREEN_1="$WORKDIR/screen1-$DATE"
    rm -r "$WORKDIR"
    mkdir -p "$WORKDIR"
    wget -O "$SCREEN_0.jpg" -q https://source.unsplash.com/random/2560x1440
    wget -O "$SCREEN_1.jpg" -q https://source.unsplash.com/random/1080x1920
    convert "$SCREEN_0.jpg" -colorspace gray "$SCREEN_0-convert.jpg"
    convert "$SCREEN_1.jpg" -colorspace gray "$SCREEN_1-convert.jpg"
    nitrogen --head=0 --set-scaled "$SCREEN_0-convert.jpg" 2> /dev/null
    nitrogen --head=1 --set-scaled "$SCREEN_1-convert.jpg" 2> /dev/null
}

wallpaper_light() {
    WORKDIR="$HOME/.local/share/unsplash/light"
    DATE=$(date +%s)
    SCREEN_0="$WORKDIR/screen0-$DATE"
    SCREEN_1="$WORKDIR/screen1-$DATE"
    rm -r "$WORKDIR"
    mkdir -p "$WORKDIR"
    wget -O "$SCREEN_0.jpg" -q https://source.unsplash.com/random/2560x1440
    wget -O "$SCREEN_1.jpg" -q https://source.unsplash.com/random/1080x1920
    nitrogen --head=0 --set-scaled "$SCREEN_0.jpg" 2> /dev/null
    nitrogen --head=1 --set-scaled "$SCREEN_1.jpg" 2> /dev/null
}

if [ $# -ne 1 ]; then
    printhelp
else
    case "$1" in
        dark)
            dark
            ;;
        light)
            light
            ;;
        boot)
            determine_colourscheme
            ;;
        *)
            printhelp
    esac
fi
